name: Swift CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    name: Build and Test
    runs-on: macos-latest
    timeout-minutes: 30
    
    strategy:
      matrix:
        xcode: ['15.0']
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Cache Swift Package Manager
      uses: actions/cache@v3
      with:
        path: |
          .build
          ~/Library/Developer/Xcode/DerivedData
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
    
    - name: Select Xcode
      run: |
        if [[ "${{ matrix.xcode }}" =~ ^[0-9]+\.[0-9]+$ ]]; then
          sudo xcode-select -s "/Applications/Xcode_${{ matrix.xcode }}.app"
        else
          echo "Invalid Xcode version format"
          exit 1
        fi
    
    - name: Show Xcode version
      run: xcodebuild -version
    
    - name: Install xcpretty
      run: gem install xcpretty
    
    - name: Build
      run: |
        xcodebuild build -project WhisperKey/WhisperKey.xcodeproj \
          -scheme WhisperKey \
          -destination 'platform=macOS' \
          -configuration Release \
          ONLY_ACTIVE_ARCH=NO
    
    - name: Run Tests
      run: |
        xcodebuild test -project WhisperKey/WhisperKey.xcodeproj \
          -scheme WhisperKey \
          -destination 'platform=macOS' \
          -configuration Debug \
          -enableCodeCoverage YES \
          | xcpretty --test --color || exit 1
      continue-on-error: true

  swiftlint:
    name: SwiftLint
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Install SwiftLint
      run: brew install swiftlint
    
    - name: Run SwiftLint
      run: |
        swiftlint --reporter github-actions-logging
      continue-on-error: true